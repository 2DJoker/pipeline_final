name: suzuki CI/CD   # üöÄ –ù–∞–∑–≤–∞–Ω–∏–µ workflow (–æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –≤ GitHub Actions)

on:
  push:
    branches: [ main ]     # ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –ø—Ä–∏ push –≤ main
  pull_request:
    branches: [ main ]     # ‚ñ∂Ô∏è –ó–∞–ø—É—Å–∫ –ø—Ä–∏ pull request –≤ main
  workflow_dispatch:        # ‚ñ∂Ô∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ (Run workflow –∫–Ω–æ–ø–∫–∞)

permissions:
  contents: write           # üîê –†–∞–∑—Ä–µ—à–∞–µ–º workflow —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–µ–≥–∏ –∏ —Ä–µ–ª–∏–∑—ã

jobs:
  # =====================================================
  # 1Ô∏è‚É£ TEST ‚Äî –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
  # =====================================================
  test:
    runs-on: ubuntu-latest   # üß∞ –ó–∞–ø—É—Å–∫ –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ Ubuntu
    steps:
      - name: Checkout code
        uses: actions/checkout@v4   # üì¶ –ö–ª–æ–Ω–∏—Ä—É–µ–º –∫–æ–¥ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è

      - name: Debug ‚Äì –ø–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É –ø—Ä–æ–µ–∫—Ç–∞
        run: |                     # üîç –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
          echo "PWD:"
          pwd
          echo "–§–∞–π–ª—ã –≤ –∫–æ—Ä–Ω–µ:"
          ls -la
          echo "–§–∞–π–ª—ã –≤ backend/:"
          ls -la backend || true
          echo "–§–∞–π–ª—ã –≤ backend/src/:"
          ls -la backend/src || true

      - name: Set up Python
        uses: actions/setup-python@v5   # üêç –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python
        with:
          python-version: '3.10'
          cache: 'pip'                  # üíæ –ö—ç—à–∏—Ä—É–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

      - name: Install dependencies (backend)
        run: |                          # üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏, –µ—Å–ª–∏ –µ—Å—Ç—å requirements.txt
          if [ -f backend/requirements.txt ]; then
            echo "‚úÖ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –∏–∑ backend/requirements.txt"
            pip install -r backend/requirements.txt
          else
            echo "‚ö†Ô∏è –§–∞–π–ª backend/requirements.txt –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É"
          fi

      - name: Run simple test (backend)
        run: |                          # üß™ –ü—Ä–æ–±–Ω—ã–π –∑–∞–ø—É—Å–∫ backend/src/app.py
          if [ -f backend/src/app.py ]; then
            echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é backend/src/app.py"
            python backend/src/app.py
          else
            echo "‚ö†Ô∏è –§–∞–π–ª backend/src/app.py –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞—é —Ç–µ—Å—Ç"
          fi

  # =====================================================
  # 2Ô∏è‚É£ DOCKER ‚Äî —Å–±–æ—Ä–∫–∞ –∏ –ø—É–±–ª–∏–∫–∞—Ü–∏—è Docker-–æ–±—Ä–∞–∑–∞
  # =====================================================
  docker:
    runs-on: ubuntu-latest
    needs: test                        # ‚õìÔ∏è –ó–∞–ø—É—Å–∫ —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ job test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to DockerHub
        uses: docker/login-action@v3    # üîê –í—Ö–æ–¥–∏–º –≤ DockerHub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6   # üê≥ –°–æ–±–∏—Ä–∞–µ–º –∏ –ø—É—à–∏–º Docker image
        with:
          context: ./backend                # üìÇ –ü–∞–ø–∫–∞ —Å Dockerfile
          file: ./backend/Dockerfile        # üìú –°–∞–º Dockerfile
          push: true                        # üöÄ –ü—É–±–ª–∏–∫—É–µ–º –Ω–∞ DockerHub
          tags: |                           # üè∑Ô∏è –ü—Ä–∏—Å–≤–∞–∏–≤–∞–µ–º 2 —Ç–µ–≥–∞
            ${{ secrets.DOCKERHUB_USERNAME }}/suzuki:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/suzuki:${{ github.run_number }}

  # =====================================================
  # 3Ô∏è‚É£ TELEGRAM ‚Äî —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π —Å–±–æ—Ä–∫–µ
  # =====================================================
  telegram:
    runs-on: ubuntu-latest
    needs: docker                         # ‚õìÔ∏è –ü–æ—Å–ª–µ Docker job
    steps:
      - name: Send Telegram message
        uses: appleboy/telegram-action@master   # ‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞
        with:
          to: ${{ secrets.TELEGRAM_TO }}        # üÜî ID —á–∞—Ç–∞
          token: ${{ secrets.TELEGRAM_TOKEN }}  # üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞
          message: |                            # üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–ª–∏–∑–µ
            ‚úÖ –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è –≤—ã–ø—É—â–µ–Ω–∞!
            üê≥ Docker-–æ–±—Ä–∞–∑: https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/suzuki
            üì¶ –¢–µ–≥: ${{ github.run_number }}
            üë§ –ò–Ω–∏—Ü–∏–∞—Ç–æ—Ä: ${{ github.actor }}

  # =====================================================
  # 4Ô∏è‚É£ RELEASE ‚Äî —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞ –Ω–∞ GitHub
  # =====================================================
  release:
    runs-on: ubuntu-latest
    needs: telegram                       # ‚õìÔ∏è –ü–æ—Å–ª–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è Telegram
    permissions:
      contents: write                     # ‚úçÔ∏è –†–∞–∑—Ä–µ—à–∞–µ–º —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç–µ–≥–∏ –∏ —Ä–µ–ª–∏–∑—ã
    steps:
      - name: Checkout code
        uses: actions/checkout@v4         # üì• –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ –ø—Ä–æ–µ–∫—Ç–∞

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2   # üè∑Ô∏è –°–æ–∑–¥–∞—ë–º GitHub Release (–≤–µ—Ä—Å–∏—è 2!)
        with:
          token: ${{ secrets.GITHUB_TOKEN }}   # ‚úÖ –ü–µ—Ä–µ–¥–∞—ë–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç–æ–∫–µ–Ω –¥–ª—è –ø—Ä–∞–≤
          tag_name: v${{ github.run_number }}  # üè∑Ô∏è –°–æ–∑–¥–∞—ë–º —Ç–µ–≥ –ø–æ –Ω–æ–º–µ—Ä—É —Å–±–æ—Ä–∫–∏ (v14, v15 –∏ —Ç.–¥.)
          name: Release ${{ github.run_number }} # üìõ –ò–º—è —Ä–µ–ª–∏–∑–∞
          body: |                               # üìÑ –û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ–ª–∏–∑–∞
            ‚úÖ –¢–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã
            üê≥ Docker –æ–±—Ä–∞–∑ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω (latest –∏ ${{ github.run_number }})
            üì¨ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram
